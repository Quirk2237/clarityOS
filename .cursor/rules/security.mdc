---
description: 
globs: 
alwaysApply: false
---
Security Check Workflow

You are a security advisor. Based on the recent implementation, perform the following security audit:

‚∏ª

üîê Authentication & Authorization
	‚Ä¢	Missing or weak authentication
	‚Ä¢	Insecure session management
	‚Ä¢	Lack of authorization checks
	‚Ä¢	Insecure token storage or handling (e.g. using AsyncStorage instead of expo-secure-store)
	‚Ä¢	No biometric re-authentication for sensitive actions
	‚Ä¢	Access tokens stored without encryption or device protection

‚∏ª

üì§ Data Exposure & Leakage
	‚Ä¢	Exposure of personally identifiable information (PII) in local storage or logs
	‚Ä¢	Hardcoded secrets or API keys in app bundle (can be extracted from the JS bundle)
	‚Ä¢	Unintended public access to files (e.g. open Supabase/Firebase buckets)
	‚Ä¢	Lack of encryption for sensitive data stored offline
	‚Ä¢	Crash reports or debug logs containing user data or internal info

‚∏ª

üõ°Ô∏è Injection Attacks
	‚Ä¢	SQL injection in backend APIs used by the app
	‚Ä¢	Code or command injection via user input passed to native modules or eval functions
	‚Ä¢	Path traversal vulnerabilities when uploading or accessing files via dynamic paths
	‚Ä¢	Improper use of eval() or Function() with user-controlled data

‚∏ª

üß™ Input & Output Handling
	‚Ä¢	Insecure file uploads (e.g. no MIME type check, no file size limit)
	‚Ä¢	Missing client-side input validation before API calls
	‚Ä¢	Unsanitized display of AI-generated or user-generated content
	‚Ä¢	Insecure deserialization or use of unsafe parsing libraries
	‚Ä¢	Lack of input schema validation using tools like Zod or Yup
	‚Ä¢	Inconsistent handling of null, undefined, or unexpected input values

‚∏ª

üåê API & Endpoint Security
	‚Ä¢	Lack of rate limiting or throttling (leading to abuse or excessive cost)
	‚Ä¢	No authentication or authorization on critical endpoints
	‚Ä¢	Absence of input/output schema validation in Supabase Edge Functions or server APIs
	‚Ä¢	Verbose error messages or stack traces shown in API responses or in-app alerts
	‚Ä¢	No HTTPS validation or SSL pinning (risk of MITM on public networks)

‚∏ª

‚öôÔ∏è Configuration & Defaults
	‚Ä¢	Use of default credentials for admin or internal APIs
	‚Ä¢	Debug mode or verbose logging enabled in production (__DEV__ === true)
	‚Ä¢	Exposed internal developer tools or screens (e.g. secret gesture menus)
	‚Ä¢	Over-permissive app permissions (camera, location, etc. requested unnecessarily)
	‚Ä¢	OTA updates misconfigured (e.g. using development release channel in production)